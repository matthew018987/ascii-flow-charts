# MIT License
#
# Copyright (c) 2022 matthew018987@gmail.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
This program is used to create flow charts in ascii from a user defined input file, that
can be used in code comments

This program was created for my own  use in creating flow charts to add to my own code
documentation

The program processes an input file created by the user.
The input file must contain a list of boxes (nodes), the location of the boxes (coordinates)
 and the lines that join the boxes (vertices).



###########################################################################################
# Input file format example:
###########################################################################################

nodes
a=bootloader
b=init
c=read i2c
d=monitor interupts
e=poll GPIO
f=transmit data

coordinates
a=A2
b=B2
c=C1
d=C2
e=C3
f=D2

vertices
a,b
b,c
b,d
b,e
c,f
d,f
e,f


###########################################################################################
# Expected output
###########################################################################################

                                 |
                         ___________________
                        |                   |
                        |    bootloader     |
                        |                   |
                         -------------------
                                 |
                                 |
                         ___________________
                        |                   |
                        |       init        |
                        |                   |
                         -------------------
           ______________________|______________________
          |                      |                      |
  ___________________    ___________________    ___________________
 |                   |  |                   |  |                   |
 |     read i2c      |  | monitor interupts |  |     poll GPIO     |
 |                   |  |                   |  |                   |
  -------------------    -------------------    -------------------
          |______________________|______________________|
                                 |
                         ___________________
                        |                   |
                        |   transmit data   |
                        |                   |
                         -------------------
                                 |

This chart was generated by this program

###########################################################################################
# Version history:
###########################################################################################

  1/7/22: MN

"""

import sys
from fileprocessor import FileProcessor


if __name__ == '__main__':
    """
    check argument is provided that is expected to contain a file path
    run file processor on specified input file

    Args:
       sys.arv: array of strings:
           arguments provided to program via command line

    Returns:
       stdout: ascii plot of chart from input file

    """
    if len(sys.argv) > 1:
        fp = FileProcessor()
        fp.load_input_file(sys.argv[1])
        fp.plot_chart()
